#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kursach_Uchet_Internet_Uslug
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Kursach_Uchet_Internet_Uslug")]
	public partial class Uchet_Internet_Uslug_dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertAdresa(Adresa instance);
    partial void UpdateAdresa(Adresa instance);
    partial void DeleteAdresa(Adresa instance);
    partial void InsertUslugi(Uslugi instance);
    partial void UpdateUslugi(Uslugi instance);
    partial void DeleteUslugi(Uslugi instance);
    partial void InsertDoljnosti(Doljnosti instance);
    partial void UpdateDoljnosti(Doljnosti instance);
    partial void DeleteDoljnosti(Doljnosti instance);
    partial void InsertGoroda(Goroda instance);
    partial void UpdateGoroda(Goroda instance);
    partial void DeleteGoroda(Goroda instance);
    partial void InsertIstoriya_Oplati(Istoriya_Oplati instance);
    partial void UpdateIstoriya_Oplati(Istoriya_Oplati instance);
    partial void DeleteIstoriya_Oplati(Istoriya_Oplati instance);
    partial void InsertKlient_Uslugi(Klient_Uslugi instance);
    partial void UpdateKlient_Uslugi(Klient_Uslugi instance);
    partial void DeleteKlient_Uslugi(Klient_Uslugi instance);
    partial void InsertKlienti(Klienti instance);
    partial void UpdateKlienti(Klienti instance);
    partial void DeleteKlienti(Klienti instance);
    partial void InsertRayoni(Rayoni instance);
    partial void UpdateRayoni(Rayoni instance);
    partial void DeleteRayoni(Rayoni instance);
    partial void InsertScheta(Scheta instance);
    partial void UpdateScheta(Scheta instance);
    partial void DeleteScheta(Scheta instance);
    partial void InsertSotrudniki(Sotrudniki instance);
    partial void UpdateSotrudniki(Sotrudniki instance);
    partial void DeleteSotrudniki(Sotrudniki instance);
    partial void InsertSotrudniki_Doljnosti(Sotrudniki_Doljnosti instance);
    partial void UpdateSotrudniki_Doljnosti(Sotrudniki_Doljnosti instance);
    partial void DeleteSotrudniki_Doljnosti(Sotrudniki_Doljnosti instance);
    partial void InsertUlizi(Ulizi instance);
    partial void UpdateUlizi(Ulizi instance);
    partial void DeleteUlizi(Ulizi instance);
    #endregion
		
		public Uchet_Internet_Uslug_dbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Kursach_Uchet_Internet_UslugConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Uchet_Internet_Uslug_dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Uchet_Internet_Uslug_dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Uchet_Internet_Uslug_dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Uchet_Internet_Uslug_dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Adresa> Adresa
		{
			get
			{
				return this.GetTable<Adresa>();
			}
		}
		
		public System.Data.Linq.Table<Uslugi> Uslugi
		{
			get
			{
				return this.GetTable<Uslugi>();
			}
		}
		
		public System.Data.Linq.Table<Doljnosti> Doljnosti
		{
			get
			{
				return this.GetTable<Doljnosti>();
			}
		}
		
		public System.Data.Linq.Table<Goroda> Goroda
		{
			get
			{
				return this.GetTable<Goroda>();
			}
		}
		
		public System.Data.Linq.Table<Istoriya_Oplati> Istoriya_Oplati
		{
			get
			{
				return this.GetTable<Istoriya_Oplati>();
			}
		}
		
		public System.Data.Linq.Table<Klient_Uslugi> Klient_Uslugi
		{
			get
			{
				return this.GetTable<Klient_Uslugi>();
			}
		}
		
		public System.Data.Linq.Table<Klienti> Klienti
		{
			get
			{
				return this.GetTable<Klienti>();
			}
		}
		
		public System.Data.Linq.Table<Rayoni> Rayoni
		{
			get
			{
				return this.GetTable<Rayoni>();
			}
		}
		
		public System.Data.Linq.Table<Scheta> Scheta
		{
			get
			{
				return this.GetTable<Scheta>();
			}
		}
		
		public System.Data.Linq.Table<Sotrudniki> Sotrudniki
		{
			get
			{
				return this.GetTable<Sotrudniki>();
			}
		}
		
		public System.Data.Linq.Table<Sotrudniki_Doljnosti> Sotrudniki_Doljnosti
		{
			get
			{
				return this.GetTable<Sotrudniki_Doljnosti>();
			}
		}
		
		public System.Data.Linq.Table<Ulizi> Ulizi
		{
			get
			{
				return this.GetTable<Ulizi>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adresa")]
	public partial class Adresa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Adresa;
		
		private int _Id_Ulizi;
		
		private string _Nomer_doma;
		
		private string _Nomer_Kvartiri;
		
		private EntitySet<Klienti> _Klienti;
		
		private EntityRef<Ulizi> _Ulizi;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_AdresaChanging(int value);
    partial void OnId_AdresaChanged();
    partial void OnId_UliziChanging(int value);
    partial void OnId_UliziChanged();
    partial void OnNomer_domaChanging(string value);
    partial void OnNomer_domaChanged();
    partial void OnNomer_KvartiriChanging(string value);
    partial void OnNomer_KvartiriChanged();
    #endregion
		
		public Adresa()
		{
			this._Klienti = new EntitySet<Klienti>(new Action<Klienti>(this.attach_Klienti), new Action<Klienti>(this.detach_Klienti));
			this._Ulizi = default(EntityRef<Ulizi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Adresa", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Adresa
		{
			get
			{
				return this._Id_Adresa;
			}
			set
			{
				if ((this._Id_Adresa != value))
				{
					this.OnId_AdresaChanging(value);
					this.SendPropertyChanging();
					this._Id_Adresa = value;
					this.SendPropertyChanged("Id_Adresa");
					this.OnId_AdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Ulizi", DbType="Int NOT NULL")]
		public int Id_Ulizi
		{
			get
			{
				return this._Id_Ulizi;
			}
			set
			{
				if ((this._Id_Ulizi != value))
				{
					if (this._Ulizi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_UliziChanging(value);
					this.SendPropertyChanging();
					this._Id_Ulizi = value;
					this.SendPropertyChanged("Id_Ulizi");
					this.OnId_UliziChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nomer_doma", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nomer_doma
		{
			get
			{
				return this._Nomer_doma;
			}
			set
			{
				if ((this._Nomer_doma != value))
				{
					this.OnNomer_domaChanging(value);
					this.SendPropertyChanging();
					this._Nomer_doma = value;
					this.SendPropertyChanged("Nomer_doma");
					this.OnNomer_domaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nomer_Kvartiri", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nomer_Kvartiri
		{
			get
			{
				return this._Nomer_Kvartiri;
			}
			set
			{
				if ((this._Nomer_Kvartiri != value))
				{
					this.OnNomer_KvartiriChanging(value);
					this.SendPropertyChanging();
					this._Nomer_Kvartiri = value;
					this.SendPropertyChanged("Nomer_Kvartiri");
					this.OnNomer_KvartiriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adresa_Klienti", Storage="_Klienti", ThisKey="Id_Adresa", OtherKey="Id_Adresa")]
		public EntitySet<Klienti> Klienti
		{
			get
			{
				return this._Klienti;
			}
			set
			{
				this._Klienti.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ulizi_Adresa", Storage="_Ulizi", ThisKey="Id_Ulizi", OtherKey="Id_Ulizi", IsForeignKey=true)]
		public Ulizi Ulizi
		{
			get
			{
				return this._Ulizi.Entity;
			}
			set
			{
				Ulizi previousValue = this._Ulizi.Entity;
				if (((previousValue != value) 
							|| (this._Ulizi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ulizi.Entity = null;
						previousValue.Adresa.Remove(this);
					}
					this._Ulizi.Entity = value;
					if ((value != null))
					{
						value.Adresa.Add(this);
						this._Id_Ulizi = value.Id_Ulizi;
					}
					else
					{
						this._Id_Ulizi = default(int);
					}
					this.SendPropertyChanged("Ulizi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Klienti(Klienti entity)
		{
			this.SendPropertyChanging();
			entity.Adresa = this;
		}
		
		private void detach_Klienti(Klienti entity)
		{
			this.SendPropertyChanging();
			entity.Adresa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uslugi")]
	public partial class Uslugi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Uslugi;
		
		private string _Nazvanie;
		
		private string _Opisanie;
		
		private int _Zena;
		
		private string _Aktualna;
		
		private System.DateTime _Data_s;
		
		private System.Nullable<System.DateTime> _Data_po;
		
		private EntitySet<Klient_Uslugi> _Klient_Uslugi;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_UslugiChanging(int value);
    partial void OnId_UslugiChanged();
    partial void OnNazvanieChanging(string value);
    partial void OnNazvanieChanged();
    partial void OnOpisanieChanging(string value);
    partial void OnOpisanieChanged();
    partial void OnZenaChanging(int value);
    partial void OnZenaChanged();
    partial void OnAktualnaChanging(string value);
    partial void OnAktualnaChanged();
    partial void OnData_sChanging(System.DateTime value);
    partial void OnData_sChanged();
    partial void OnData_poChanging(System.Nullable<System.DateTime> value);
    partial void OnData_poChanged();
    #endregion
		
		public Uslugi()
		{
			this._Klient_Uslugi = new EntitySet<Klient_Uslugi>(new Action<Klient_Uslugi>(this.attach_Klient_Uslugi), new Action<Klient_Uslugi>(this.detach_Klient_Uslugi));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Uslugi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Uslugi
		{
			get
			{
				return this._Id_Uslugi;
			}
			set
			{
				if ((this._Id_Uslugi != value))
				{
					this.OnId_UslugiChanging(value);
					this.SendPropertyChanging();
					this._Id_Uslugi = value;
					this.SendPropertyChanged("Id_Uslugi");
					this.OnId_UslugiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazvanie", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Nazvanie
		{
			get
			{
				return this._Nazvanie;
			}
			set
			{
				if ((this._Nazvanie != value))
				{
					this.OnNazvanieChanging(value);
					this.SendPropertyChanging();
					this._Nazvanie = value;
					this.SendPropertyChanged("Nazvanie");
					this.OnNazvanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opisanie", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Opisanie
		{
			get
			{
				return this._Opisanie;
			}
			set
			{
				if ((this._Opisanie != value))
				{
					this.OnOpisanieChanging(value);
					this.SendPropertyChanging();
					this._Opisanie = value;
					this.SendPropertyChanged("Opisanie");
					this.OnOpisanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zena", DbType="Int NOT NULL")]
		public int Zena
		{
			get
			{
				return this._Zena;
			}
			set
			{
				if ((this._Zena != value))
				{
					this.OnZenaChanging(value);
					this.SendPropertyChanging();
					this._Zena = value;
					this.SendPropertyChanged("Zena");
					this.OnZenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aktualna", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Aktualna
		{
			get
			{
				return this._Aktualna;
			}
			set
			{
				if ((this._Aktualna != value))
				{
					this.OnAktualnaChanging(value);
					this.SendPropertyChanging();
					this._Aktualna = value;
					this.SendPropertyChanged("Aktualna");
					this.OnAktualnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_s", DbType="DateTime NOT NULL")]
		public System.DateTime Data_s
		{
			get
			{
				return this._Data_s;
			}
			set
			{
				if ((this._Data_s != value))
				{
					this.OnData_sChanging(value);
					this.SendPropertyChanging();
					this._Data_s = value;
					this.SendPropertyChanged("Data_s");
					this.OnData_sChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_po", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_po
		{
			get
			{
				return this._Data_po;
			}
			set
			{
				if ((this._Data_po != value))
				{
					this.OnData_poChanging(value);
					this.SendPropertyChanging();
					this._Data_po = value;
					this.SendPropertyChanged("Data_po");
					this.OnData_poChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uslugi_Klient_Uslugi", Storage="_Klient_Uslugi", ThisKey="Id_Uslugi", OtherKey="Id_Uslugi")]
		public EntitySet<Klient_Uslugi> Klient_Uslugi
		{
			get
			{
				return this._Klient_Uslugi;
			}
			set
			{
				this._Klient_Uslugi.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Klient_Uslugi(Klient_Uslugi entity)
		{
			this.SendPropertyChanging();
			entity.Uslugi = this;
		}
		
		private void detach_Klient_Uslugi(Klient_Uslugi entity)
		{
			this.SendPropertyChanging();
			entity.Uslugi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doljnosti")]
	public partial class Doljnosti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Doljnosti;
		
		private string _Nazvanie;
		
		private int _Oklad;
		
		private string _Opisanie;
		
		private EntitySet<Sotrudniki_Doljnosti> _Sotrudniki_Doljnosti;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_DoljnostiChanging(int value);
    partial void OnId_DoljnostiChanged();
    partial void OnNazvanieChanging(string value);
    partial void OnNazvanieChanged();
    partial void OnOkladChanging(int value);
    partial void OnOkladChanged();
    partial void OnOpisanieChanging(string value);
    partial void OnOpisanieChanged();
    #endregion
		
		public Doljnosti()
		{
			this._Sotrudniki_Doljnosti = new EntitySet<Sotrudniki_Doljnosti>(new Action<Sotrudniki_Doljnosti>(this.attach_Sotrudniki_Doljnosti), new Action<Sotrudniki_Doljnosti>(this.detach_Sotrudniki_Doljnosti));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Doljnosti", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Doljnosti
		{
			get
			{
				return this._Id_Doljnosti;
			}
			set
			{
				if ((this._Id_Doljnosti != value))
				{
					this.OnId_DoljnostiChanging(value);
					this.SendPropertyChanging();
					this._Id_Doljnosti = value;
					this.SendPropertyChanged("Id_Doljnosti");
					this.OnId_DoljnostiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazvanie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazvanie
		{
			get
			{
				return this._Nazvanie;
			}
			set
			{
				if ((this._Nazvanie != value))
				{
					this.OnNazvanieChanging(value);
					this.SendPropertyChanging();
					this._Nazvanie = value;
					this.SendPropertyChanged("Nazvanie");
					this.OnNazvanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oklad", DbType="Int NOT NULL")]
		public int Oklad
		{
			get
			{
				return this._Oklad;
			}
			set
			{
				if ((this._Oklad != value))
				{
					this.OnOkladChanging(value);
					this.SendPropertyChanging();
					this._Oklad = value;
					this.SendPropertyChanged("Oklad");
					this.OnOkladChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opisanie", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Opisanie
		{
			get
			{
				return this._Opisanie;
			}
			set
			{
				if ((this._Opisanie != value))
				{
					this.OnOpisanieChanging(value);
					this.SendPropertyChanging();
					this._Opisanie = value;
					this.SendPropertyChanged("Opisanie");
					this.OnOpisanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doljnosti_Sotrudniki_Doljnosti", Storage="_Sotrudniki_Doljnosti", ThisKey="Id_Doljnosti", OtherKey="Id_Doljnosti")]
		public EntitySet<Sotrudniki_Doljnosti> Sotrudniki_Doljnosti
		{
			get
			{
				return this._Sotrudniki_Doljnosti;
			}
			set
			{
				this._Sotrudniki_Doljnosti.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sotrudniki_Doljnosti(Sotrudniki_Doljnosti entity)
		{
			this.SendPropertyChanging();
			entity.Doljnosti = this;
		}
		
		private void detach_Sotrudniki_Doljnosti(Sotrudniki_Doljnosti entity)
		{
			this.SendPropertyChanging();
			entity.Doljnosti = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Goroda")]
	public partial class Goroda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Goroda;
		
		private string _Nazvanie;
		
		private EntitySet<Rayoni> _Rayoni;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_GorodaChanging(int value);
    partial void OnId_GorodaChanged();
    partial void OnNazvanieChanging(string value);
    partial void OnNazvanieChanged();
    #endregion
		
		public Goroda()
		{
			this._Rayoni = new EntitySet<Rayoni>(new Action<Rayoni>(this.attach_Rayoni), new Action<Rayoni>(this.detach_Rayoni));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Goroda", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Goroda
		{
			get
			{
				return this._Id_Goroda;
			}
			set
			{
				if ((this._Id_Goroda != value))
				{
					this.OnId_GorodaChanging(value);
					this.SendPropertyChanging();
					this._Id_Goroda = value;
					this.SendPropertyChanged("Id_Goroda");
					this.OnId_GorodaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazvanie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazvanie
		{
			get
			{
				return this._Nazvanie;
			}
			set
			{
				if ((this._Nazvanie != value))
				{
					this.OnNazvanieChanging(value);
					this.SendPropertyChanging();
					this._Nazvanie = value;
					this.SendPropertyChanged("Nazvanie");
					this.OnNazvanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goroda_Rayoni", Storage="_Rayoni", ThisKey="Id_Goroda", OtherKey="Id_Goroda")]
		public EntitySet<Rayoni> Rayoni
		{
			get
			{
				return this._Rayoni;
			}
			set
			{
				this._Rayoni.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rayoni(Rayoni entity)
		{
			this.SendPropertyChanging();
			entity.Goroda = this;
		}
		
		private void detach_Rayoni(Rayoni entity)
		{
			this.SendPropertyChanging();
			entity.Goroda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Istoriya_Oplati")]
	public partial class Istoriya_Oplati : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Istorii_oplati;
		
		private int _Summa;
		
		private int _Id_Klient_Uslugi;
		
		private System.DateTime _Data_oplati;
		
		private string _Resultat_Oplati;
		
		private EntityRef<Klient_Uslugi> _Klient_Uslugi;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Istorii_oplatiChanging(int value);
    partial void OnId_Istorii_oplatiChanged();
    partial void OnSummaChanging(int value);
    partial void OnSummaChanged();
    partial void OnId_Klient_UslugiChanging(int value);
    partial void OnId_Klient_UslugiChanged();
    partial void OnData_oplatiChanging(System.DateTime value);
    partial void OnData_oplatiChanged();
    partial void OnResultat_OplatiChanging(string value);
    partial void OnResultat_OplatiChanged();
    #endregion
		
		public Istoriya_Oplati()
		{
			this._Klient_Uslugi = default(EntityRef<Klient_Uslugi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Istorii_oplati", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Istorii_oplati
		{
			get
			{
				return this._Id_Istorii_oplati;
			}
			set
			{
				if ((this._Id_Istorii_oplati != value))
				{
					this.OnId_Istorii_oplatiChanging(value);
					this.SendPropertyChanging();
					this._Id_Istorii_oplati = value;
					this.SendPropertyChanged("Id_Istorii_oplati");
					this.OnId_Istorii_oplatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summa", DbType="Int NOT NULL")]
		public int Summa
		{
			get
			{
				return this._Summa;
			}
			set
			{
				if ((this._Summa != value))
				{
					this.OnSummaChanging(value);
					this.SendPropertyChanging();
					this._Summa = value;
					this.SendPropertyChanged("Summa");
					this.OnSummaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Klient_Uslugi", DbType="Int NOT NULL")]
		public int Id_Klient_Uslugi
		{
			get
			{
				return this._Id_Klient_Uslugi;
			}
			set
			{
				if ((this._Id_Klient_Uslugi != value))
				{
					if (this._Klient_Uslugi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Klient_UslugiChanging(value);
					this.SendPropertyChanging();
					this._Id_Klient_Uslugi = value;
					this.SendPropertyChanged("Id_Klient_Uslugi");
					this.OnId_Klient_UslugiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_oplati", DbType="DateTime NOT NULL")]
		public System.DateTime Data_oplati
		{
			get
			{
				return this._Data_oplati;
			}
			set
			{
				if ((this._Data_oplati != value))
				{
					this.OnData_oplatiChanging(value);
					this.SendPropertyChanging();
					this._Data_oplati = value;
					this.SendPropertyChanged("Data_oplati");
					this.OnData_oplatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resultat_Oplati", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Resultat_Oplati
		{
			get
			{
				return this._Resultat_Oplati;
			}
			set
			{
				if ((this._Resultat_Oplati != value))
				{
					this.OnResultat_OplatiChanging(value);
					this.SendPropertyChanging();
					this._Resultat_Oplati = value;
					this.SendPropertyChanged("Resultat_Oplati");
					this.OnResultat_OplatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Uslugi_Istoriya_Oplati", Storage="_Klient_Uslugi", ThisKey="Id_Klient_Uslugi", OtherKey="Id_Klient_Uslugi", IsForeignKey=true)]
		public Klient_Uslugi Klient_Uslugi
		{
			get
			{
				return this._Klient_Uslugi.Entity;
			}
			set
			{
				Klient_Uslugi previousValue = this._Klient_Uslugi.Entity;
				if (((previousValue != value) 
							|| (this._Klient_Uslugi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klient_Uslugi.Entity = null;
						previousValue.Istoriya_Oplati.Remove(this);
					}
					this._Klient_Uslugi.Entity = value;
					if ((value != null))
					{
						value.Istoriya_Oplati.Add(this);
						this._Id_Klient_Uslugi = value.Id_Klient_Uslugi;
					}
					else
					{
						this._Id_Klient_Uslugi = default(int);
					}
					this.SendPropertyChanged("Klient_Uslugi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klient_Uslugi")]
	public partial class Klient_Uslugi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Klient_Uslugi;
		
		private int _Id_Sotrudnika;
		
		private int _Id_Klienta;
		
		private int _Id_Uslugi;
		
		private System.DateTime _Dara_nachala;
		
		private System.Nullable<System.DateTime> _Data_konza;
		
		private EntitySet<Istoriya_Oplati> _Istoriya_Oplati;
		
		private EntityRef<Uslugi> _Uslugi;
		
		private EntityRef<Klienti> _Klienti;
		
		private EntityRef<Sotrudniki> _Sotrudniki;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Klient_UslugiChanging(int value);
    partial void OnId_Klient_UslugiChanged();
    partial void OnId_SotrudnikaChanging(int value);
    partial void OnId_SotrudnikaChanged();
    partial void OnId_KlientaChanging(int value);
    partial void OnId_KlientaChanged();
    partial void OnId_UslugiChanging(int value);
    partial void OnId_UslugiChanged();
    partial void OnDara_nachalaChanging(System.DateTime value);
    partial void OnDara_nachalaChanged();
    partial void OnData_konzaChanging(System.Nullable<System.DateTime> value);
    partial void OnData_konzaChanged();
    #endregion
		
		public Klient_Uslugi()
		{
			this._Istoriya_Oplati = new EntitySet<Istoriya_Oplati>(new Action<Istoriya_Oplati>(this.attach_Istoriya_Oplati), new Action<Istoriya_Oplati>(this.detach_Istoriya_Oplati));
			this._Uslugi = default(EntityRef<Uslugi>);
			this._Klienti = default(EntityRef<Klienti>);
			this._Sotrudniki = default(EntityRef<Sotrudniki>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Klient_Uslugi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Klient_Uslugi
		{
			get
			{
				return this._Id_Klient_Uslugi;
			}
			set
			{
				if ((this._Id_Klient_Uslugi != value))
				{
					this.OnId_Klient_UslugiChanging(value);
					this.SendPropertyChanging();
					this._Id_Klient_Uslugi = value;
					this.SendPropertyChanged("Id_Klient_Uslugi");
					this.OnId_Klient_UslugiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Sotrudnika", DbType="Int NOT NULL")]
		public int Id_Sotrudnika
		{
			get
			{
				return this._Id_Sotrudnika;
			}
			set
			{
				if ((this._Id_Sotrudnika != value))
				{
					if (this._Sotrudniki.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_SotrudnikaChanging(value);
					this.SendPropertyChanging();
					this._Id_Sotrudnika = value;
					this.SendPropertyChanged("Id_Sotrudnika");
					this.OnId_SotrudnikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Klienta", DbType="Int NOT NULL")]
		public int Id_Klienta
		{
			get
			{
				return this._Id_Klienta;
			}
			set
			{
				if ((this._Id_Klienta != value))
				{
					if (this._Klienti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_KlientaChanging(value);
					this.SendPropertyChanging();
					this._Id_Klienta = value;
					this.SendPropertyChanged("Id_Klienta");
					this.OnId_KlientaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Uslugi", DbType="Int NOT NULL")]
		public int Id_Uslugi
		{
			get
			{
				return this._Id_Uslugi;
			}
			set
			{
				if ((this._Id_Uslugi != value))
				{
					if (this._Uslugi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_UslugiChanging(value);
					this.SendPropertyChanging();
					this._Id_Uslugi = value;
					this.SendPropertyChanged("Id_Uslugi");
					this.OnId_UslugiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dara_nachala", DbType="DateTime NOT NULL")]
		public System.DateTime Dara_nachala
		{
			get
			{
				return this._Dara_nachala;
			}
			set
			{
				if ((this._Dara_nachala != value))
				{
					this.OnDara_nachalaChanging(value);
					this.SendPropertyChanging();
					this._Dara_nachala = value;
					this.SendPropertyChanged("Dara_nachala");
					this.OnDara_nachalaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_konza", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_konza
		{
			get
			{
				return this._Data_konza;
			}
			set
			{
				if ((this._Data_konza != value))
				{
					this.OnData_konzaChanging(value);
					this.SendPropertyChanging();
					this._Data_konza = value;
					this.SendPropertyChanged("Data_konza");
					this.OnData_konzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Uslugi_Istoriya_Oplati", Storage="_Istoriya_Oplati", ThisKey="Id_Klient_Uslugi", OtherKey="Id_Klient_Uslugi")]
		public EntitySet<Istoriya_Oplati> Istoriya_Oplati
		{
			get
			{
				return this._Istoriya_Oplati;
			}
			set
			{
				this._Istoriya_Oplati.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uslugi_Klient_Uslugi", Storage="_Uslugi", ThisKey="Id_Uslugi", OtherKey="Id_Uslugi", IsForeignKey=true)]
		public Uslugi Uslugi
		{
			get
			{
				return this._Uslugi.Entity;
			}
			set
			{
				Uslugi previousValue = this._Uslugi.Entity;
				if (((previousValue != value) 
							|| (this._Uslugi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uslugi.Entity = null;
						previousValue.Klient_Uslugi.Remove(this);
					}
					this._Uslugi.Entity = value;
					if ((value != null))
					{
						value.Klient_Uslugi.Add(this);
						this._Id_Uslugi = value.Id_Uslugi;
					}
					else
					{
						this._Id_Uslugi = default(int);
					}
					this.SendPropertyChanged("Uslugi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klienti_Klient_Uslugi", Storage="_Klienti", ThisKey="Id_Klienta", OtherKey="Id_Klienta", IsForeignKey=true)]
		public Klienti Klienti
		{
			get
			{
				return this._Klienti.Entity;
			}
			set
			{
				Klienti previousValue = this._Klienti.Entity;
				if (((previousValue != value) 
							|| (this._Klienti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klienti.Entity = null;
						previousValue.Klient_Uslugi.Remove(this);
					}
					this._Klienti.Entity = value;
					if ((value != null))
					{
						value.Klient_Uslugi.Add(this);
						this._Id_Klienta = value.Id_Klienta;
					}
					else
					{
						this._Id_Klienta = default(int);
					}
					this.SendPropertyChanged("Klienti");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sotrudniki_Klient_Uslugi", Storage="_Sotrudniki", ThisKey="Id_Sotrudnika", OtherKey="Id_Sotrudnika", IsForeignKey=true)]
		public Sotrudniki Sotrudniki
		{
			get
			{
				return this._Sotrudniki.Entity;
			}
			set
			{
				Sotrudniki previousValue = this._Sotrudniki.Entity;
				if (((previousValue != value) 
							|| (this._Sotrudniki.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sotrudniki.Entity = null;
						previousValue.Klient_Uslugi.Remove(this);
					}
					this._Sotrudniki.Entity = value;
					if ((value != null))
					{
						value.Klient_Uslugi.Add(this);
						this._Id_Sotrudnika = value.Id_Sotrudnika;
					}
					else
					{
						this._Id_Sotrudnika = default(int);
					}
					this.SendPropertyChanged("Sotrudniki");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Istoriya_Oplati(Istoriya_Oplati entity)
		{
			this.SendPropertyChanging();
			entity.Klient_Uslugi = this;
		}
		
		private void detach_Istoriya_Oplati(Istoriya_Oplati entity)
		{
			this.SendPropertyChanging();
			entity.Klient_Uslugi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klienti")]
	public partial class Klienti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Klienta;
		
		private string _Familiya;
		
		private string _Imya;
		
		private string _Otchestvo;
		
		private string _Telefon;
		
		private string _Pasport;
		
		private string _INN;
		
		private int _Id_Adresa;
		
		private int _Id_Scheta;
		
		private System.DateTime _Data_podklucheniya;
		
		private System.Nullable<System.DateTime> _Data_otklucheniya;
		
		private EntitySet<Klient_Uslugi> _Klient_Uslugi;
		
		private EntityRef<Adresa> _Adresa;
		
		private EntityRef<Scheta> _Scheta;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_KlientaChanging(int value);
    partial void OnId_KlientaChanged();
    partial void OnFamiliyaChanging(string value);
    partial void OnFamiliyaChanged();
    partial void OnImyaChanging(string value);
    partial void OnImyaChanged();
    partial void OnOtchestvoChanging(string value);
    partial void OnOtchestvoChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnPasportChanging(string value);
    partial void OnPasportChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnId_AdresaChanging(int value);
    partial void OnId_AdresaChanged();
    partial void OnId_SchetaChanging(int value);
    partial void OnId_SchetaChanged();
    partial void OnData_podklucheniyaChanging(System.DateTime value);
    partial void OnData_podklucheniyaChanged();
    partial void OnData_otklucheniyaChanging(System.Nullable<System.DateTime> value);
    partial void OnData_otklucheniyaChanged();
    #endregion
		
		public Klienti()
		{
			this._Klient_Uslugi = new EntitySet<Klient_Uslugi>(new Action<Klient_Uslugi>(this.attach_Klient_Uslugi), new Action<Klient_Uslugi>(this.detach_Klient_Uslugi));
			this._Adresa = default(EntityRef<Adresa>);
			this._Scheta = default(EntityRef<Scheta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Klienta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Klienta
		{
			get
			{
				return this._Id_Klienta;
			}
			set
			{
				if ((this._Id_Klienta != value))
				{
					this.OnId_KlientaChanging(value);
					this.SendPropertyChanging();
					this._Id_Klienta = value;
					this.SendPropertyChanged("Id_Klienta");
					this.OnId_KlientaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Familiya", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Familiya
		{
			get
			{
				return this._Familiya;
			}
			set
			{
				if ((this._Familiya != value))
				{
					this.OnFamiliyaChanging(value);
					this.SendPropertyChanging();
					this._Familiya = value;
					this.SendPropertyChanged("Familiya");
					this.OnFamiliyaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imya", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Imya
		{
			get
			{
				return this._Imya;
			}
			set
			{
				if ((this._Imya != value))
				{
					this.OnImyaChanging(value);
					this.SendPropertyChanging();
					this._Imya = value;
					this.SendPropertyChanged("Imya");
					this.OnImyaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otchestvo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Otchestvo
		{
			get
			{
				return this._Otchestvo;
			}
			set
			{
				if ((this._Otchestvo != value))
				{
					this.OnOtchestvoChanging(value);
					this.SendPropertyChanging();
					this._Otchestvo = value;
					this.SendPropertyChanged("Otchestvo");
					this.OnOtchestvoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pasport", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Pasport
		{
			get
			{
				return this._Pasport;
			}
			set
			{
				if ((this._Pasport != value))
				{
					this.OnPasportChanging(value);
					this.SendPropertyChanging();
					this._Pasport = value;
					this.SendPropertyChanged("Pasport");
					this.OnPasportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Adresa", DbType="Int NOT NULL")]
		public int Id_Adresa
		{
			get
			{
				return this._Id_Adresa;
			}
			set
			{
				if ((this._Id_Adresa != value))
				{
					if (this._Adresa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_AdresaChanging(value);
					this.SendPropertyChanging();
					this._Id_Adresa = value;
					this.SendPropertyChanged("Id_Adresa");
					this.OnId_AdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Scheta", DbType="Int NOT NULL")]
		public int Id_Scheta
		{
			get
			{
				return this._Id_Scheta;
			}
			set
			{
				if ((this._Id_Scheta != value))
				{
					if (this._Scheta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_SchetaChanging(value);
					this.SendPropertyChanging();
					this._Id_Scheta = value;
					this.SendPropertyChanged("Id_Scheta");
					this.OnId_SchetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_podklucheniya", DbType="DateTime NOT NULL")]
		public System.DateTime Data_podklucheniya
		{
			get
			{
				return this._Data_podklucheniya;
			}
			set
			{
				if ((this._Data_podklucheniya != value))
				{
					this.OnData_podklucheniyaChanging(value);
					this.SendPropertyChanging();
					this._Data_podklucheniya = value;
					this.SendPropertyChanged("Data_podklucheniya");
					this.OnData_podklucheniyaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_otklucheniya", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_otklucheniya
		{
			get
			{
				return this._Data_otklucheniya;
			}
			set
			{
				if ((this._Data_otklucheniya != value))
				{
					this.OnData_otklucheniyaChanging(value);
					this.SendPropertyChanging();
					this._Data_otklucheniya = value;
					this.SendPropertyChanged("Data_otklucheniya");
					this.OnData_otklucheniyaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klienti_Klient_Uslugi", Storage="_Klient_Uslugi", ThisKey="Id_Klienta", OtherKey="Id_Klienta")]
		public EntitySet<Klient_Uslugi> Klient_Uslugi
		{
			get
			{
				return this._Klient_Uslugi;
			}
			set
			{
				this._Klient_Uslugi.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adresa_Klienti", Storage="_Adresa", ThisKey="Id_Adresa", OtherKey="Id_Adresa", IsForeignKey=true)]
		public Adresa Adresa
		{
			get
			{
				return this._Adresa.Entity;
			}
			set
			{
				Adresa previousValue = this._Adresa.Entity;
				if (((previousValue != value) 
							|| (this._Adresa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adresa.Entity = null;
						previousValue.Klienti.Remove(this);
					}
					this._Adresa.Entity = value;
					if ((value != null))
					{
						value.Klienti.Add(this);
						this._Id_Adresa = value.Id_Adresa;
					}
					else
					{
						this._Id_Adresa = default(int);
					}
					this.SendPropertyChanged("Adresa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scheta_Klienti", Storage="_Scheta", ThisKey="Id_Scheta", OtherKey="Id_Scheta", IsForeignKey=true)]
		public Scheta Scheta
		{
			get
			{
				return this._Scheta.Entity;
			}
			set
			{
				Scheta previousValue = this._Scheta.Entity;
				if (((previousValue != value) 
							|| (this._Scheta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheta.Entity = null;
						previousValue.Klienti.Remove(this);
					}
					this._Scheta.Entity = value;
					if ((value != null))
					{
						value.Klienti.Add(this);
						this._Id_Scheta = value.Id_Scheta;
					}
					else
					{
						this._Id_Scheta = default(int);
					}
					this.SendPropertyChanged("Scheta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Klient_Uslugi(Klient_Uslugi entity)
		{
			this.SendPropertyChanging();
			entity.Klienti = this;
		}
		
		private void detach_Klient_Uslugi(Klient_Uslugi entity)
		{
			this.SendPropertyChanging();
			entity.Klienti = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rayoni")]
	public partial class Rayoni : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Rayona;
		
		private string _Nazvanie;
		
		private int _Id_Goroda;
		
		private EntitySet<Ulizi> _Ulizi;
		
		private EntityRef<Goroda> _Goroda;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_RayonaChanging(int value);
    partial void OnId_RayonaChanged();
    partial void OnNazvanieChanging(string value);
    partial void OnNazvanieChanged();
    partial void OnId_GorodaChanging(int value);
    partial void OnId_GorodaChanged();
    #endregion
		
		public Rayoni()
		{
			this._Ulizi = new EntitySet<Ulizi>(new Action<Ulizi>(this.attach_Ulizi), new Action<Ulizi>(this.detach_Ulizi));
			this._Goroda = default(EntityRef<Goroda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Rayona", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Rayona
		{
			get
			{
				return this._Id_Rayona;
			}
			set
			{
				if ((this._Id_Rayona != value))
				{
					this.OnId_RayonaChanging(value);
					this.SendPropertyChanging();
					this._Id_Rayona = value;
					this.SendPropertyChanged("Id_Rayona");
					this.OnId_RayonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazvanie", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nazvanie
		{
			get
			{
				return this._Nazvanie;
			}
			set
			{
				if ((this._Nazvanie != value))
				{
					this.OnNazvanieChanging(value);
					this.SendPropertyChanging();
					this._Nazvanie = value;
					this.SendPropertyChanged("Nazvanie");
					this.OnNazvanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Goroda", DbType="Int NOT NULL")]
		public int Id_Goroda
		{
			get
			{
				return this._Id_Goroda;
			}
			set
			{
				if ((this._Id_Goroda != value))
				{
					if (this._Goroda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_GorodaChanging(value);
					this.SendPropertyChanging();
					this._Id_Goroda = value;
					this.SendPropertyChanged("Id_Goroda");
					this.OnId_GorodaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rayoni_Ulizi", Storage="_Ulizi", ThisKey="Id_Rayona", OtherKey="Id_Rayona")]
		public EntitySet<Ulizi> Ulizi
		{
			get
			{
				return this._Ulizi;
			}
			set
			{
				this._Ulizi.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goroda_Rayoni", Storage="_Goroda", ThisKey="Id_Goroda", OtherKey="Id_Goroda", IsForeignKey=true)]
		public Goroda Goroda
		{
			get
			{
				return this._Goroda.Entity;
			}
			set
			{
				Goroda previousValue = this._Goroda.Entity;
				if (((previousValue != value) 
							|| (this._Goroda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goroda.Entity = null;
						previousValue.Rayoni.Remove(this);
					}
					this._Goroda.Entity = value;
					if ((value != null))
					{
						value.Rayoni.Add(this);
						this._Id_Goroda = value.Id_Goroda;
					}
					else
					{
						this._Id_Goroda = default(int);
					}
					this.SendPropertyChanged("Goroda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ulizi(Ulizi entity)
		{
			this.SendPropertyChanging();
			entity.Rayoni = this;
		}
		
		private void detach_Ulizi(Ulizi entity)
		{
			this.SendPropertyChanging();
			entity.Rayoni = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Scheta")]
	public partial class Scheta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Scheta;
		
		private int _Summa;
		
		private EntitySet<Klienti> _Klienti;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_SchetaChanging(int value);
    partial void OnId_SchetaChanged();
    partial void OnSummaChanging(int value);
    partial void OnSummaChanged();
    #endregion
		
		public Scheta()
		{
			this._Klienti = new EntitySet<Klienti>(new Action<Klienti>(this.attach_Klienti), new Action<Klienti>(this.detach_Klienti));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Scheta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Scheta
		{
			get
			{
				return this._Id_Scheta;
			}
			set
			{
				if ((this._Id_Scheta != value))
				{
					this.OnId_SchetaChanging(value);
					this.SendPropertyChanging();
					this._Id_Scheta = value;
					this.SendPropertyChanged("Id_Scheta");
					this.OnId_SchetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summa", DbType="Int NOT NULL")]
		public int Summa
		{
			get
			{
				return this._Summa;
			}
			set
			{
				if ((this._Summa != value))
				{
					this.OnSummaChanging(value);
					this.SendPropertyChanging();
					this._Summa = value;
					this.SendPropertyChanged("Summa");
					this.OnSummaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scheta_Klienti", Storage="_Klienti", ThisKey="Id_Scheta", OtherKey="Id_Scheta")]
		public EntitySet<Klienti> Klienti
		{
			get
			{
				return this._Klienti;
			}
			set
			{
				this._Klienti.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Klienti(Klienti entity)
		{
			this.SendPropertyChanging();
			entity.Scheta = this;
		}
		
		private void detach_Klienti(Klienti entity)
		{
			this.SendPropertyChanging();
			entity.Scheta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sotrudniki")]
	public partial class Sotrudniki : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Sotrudnika;
		
		private string _Familiya;
		
		private string _Imya;
		
		private string _Otchestvo;
		
		private string _Telefon;
		
		private string _E_mail;
		
		private string _Pasport;
		
		private string _INN;
		
		private System.DateTime _Date_reg;
		
		private EntitySet<Klient_Uslugi> _Klient_Uslugi;
		
		private EntitySet<Sotrudniki_Doljnosti> _Sotrudniki_Doljnosti;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_SotrudnikaChanging(int value);
    partial void OnId_SotrudnikaChanged();
    partial void OnFamiliyaChanging(string value);
    partial void OnFamiliyaChanged();
    partial void OnImyaChanging(string value);
    partial void OnImyaChanged();
    partial void OnOtchestvoChanging(string value);
    partial void OnOtchestvoChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnE_mailChanging(string value);
    partial void OnE_mailChanged();
    partial void OnPasportChanging(string value);
    partial void OnPasportChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnDate_regChanging(System.DateTime value);
    partial void OnDate_regChanged();
    #endregion
		
		public Sotrudniki()
		{
			this._Klient_Uslugi = new EntitySet<Klient_Uslugi>(new Action<Klient_Uslugi>(this.attach_Klient_Uslugi), new Action<Klient_Uslugi>(this.detach_Klient_Uslugi));
			this._Sotrudniki_Doljnosti = new EntitySet<Sotrudniki_Doljnosti>(new Action<Sotrudniki_Doljnosti>(this.attach_Sotrudniki_Doljnosti), new Action<Sotrudniki_Doljnosti>(this.detach_Sotrudniki_Doljnosti));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Sotrudnika", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Sotrudnika
		{
			get
			{
				return this._Id_Sotrudnika;
			}
			set
			{
				if ((this._Id_Sotrudnika != value))
				{
					this.OnId_SotrudnikaChanging(value);
					this.SendPropertyChanging();
					this._Id_Sotrudnika = value;
					this.SendPropertyChanged("Id_Sotrudnika");
					this.OnId_SotrudnikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Familiya", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Familiya
		{
			get
			{
				return this._Familiya;
			}
			set
			{
				if ((this._Familiya != value))
				{
					this.OnFamiliyaChanging(value);
					this.SendPropertyChanging();
					this._Familiya = value;
					this.SendPropertyChanged("Familiya");
					this.OnFamiliyaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imya", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Imya
		{
			get
			{
				return this._Imya;
			}
			set
			{
				if ((this._Imya != value))
				{
					this.OnImyaChanging(value);
					this.SendPropertyChanging();
					this._Imya = value;
					this.SendPropertyChanged("Imya");
					this.OnImyaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otchestvo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Otchestvo
		{
			get
			{
				return this._Otchestvo;
			}
			set
			{
				if ((this._Otchestvo != value))
				{
					this.OnOtchestvoChanging(value);
					this.SendPropertyChanging();
					this._Otchestvo = value;
					this.SendPropertyChanged("Otchestvo");
					this.OnOtchestvoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_mail", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string E_mail
		{
			get
			{
				return this._E_mail;
			}
			set
			{
				if ((this._E_mail != value))
				{
					this.OnE_mailChanging(value);
					this.SendPropertyChanging();
					this._E_mail = value;
					this.SendPropertyChanged("E_mail");
					this.OnE_mailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pasport", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Pasport
		{
			get
			{
				return this._Pasport;
			}
			set
			{
				if ((this._Pasport != value))
				{
					this.OnPasportChanging(value);
					this.SendPropertyChanging();
					this._Pasport = value;
					this.SendPropertyChanged("Pasport");
					this.OnPasportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_reg", DbType="DateTime NOT NULL")]
		public System.DateTime Date_reg
		{
			get
			{
				return this._Date_reg;
			}
			set
			{
				if ((this._Date_reg != value))
				{
					this.OnDate_regChanging(value);
					this.SendPropertyChanging();
					this._Date_reg = value;
					this.SendPropertyChanged("Date_reg");
					this.OnDate_regChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sotrudniki_Klient_Uslugi", Storage="_Klient_Uslugi", ThisKey="Id_Sotrudnika", OtherKey="Id_Sotrudnika")]
		public EntitySet<Klient_Uslugi> Klient_Uslugi
		{
			get
			{
				return this._Klient_Uslugi;
			}
			set
			{
				this._Klient_Uslugi.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sotrudniki_Sotrudniki_Doljnosti", Storage="_Sotrudniki_Doljnosti", ThisKey="Id_Sotrudnika", OtherKey="Id_Sotrudnika")]
		public EntitySet<Sotrudniki_Doljnosti> Sotrudniki_Doljnosti
		{
			get
			{
				return this._Sotrudniki_Doljnosti;
			}
			set
			{
				this._Sotrudniki_Doljnosti.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Klient_Uslugi(Klient_Uslugi entity)
		{
			this.SendPropertyChanging();
			entity.Sotrudniki = this;
		}
		
		private void detach_Klient_Uslugi(Klient_Uslugi entity)
		{
			this.SendPropertyChanging();
			entity.Sotrudniki = null;
		}
		
		private void attach_Sotrudniki_Doljnosti(Sotrudniki_Doljnosti entity)
		{
			this.SendPropertyChanging();
			entity.Sotrudniki = this;
		}
		
		private void detach_Sotrudniki_Doljnosti(Sotrudniki_Doljnosti entity)
		{
			this.SendPropertyChanging();
			entity.Sotrudniki = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sotrudniki_Doljnosti")]
	public partial class Sotrudniki_Doljnosti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Sotrudniki_Doljnosti;
		
		private int _Id_Doljnosti;
		
		private int _Id_Sotrudnika;
		
		private System.DateTime _Data_s;
		
		private System.Nullable<System.DateTime> _Data_po;
		
		private EntityRef<Doljnosti> _Doljnosti;
		
		private EntityRef<Sotrudniki> _Sotrudniki;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Sotrudniki_DoljnostiChanging(int value);
    partial void OnId_Sotrudniki_DoljnostiChanged();
    partial void OnId_DoljnostiChanging(int value);
    partial void OnId_DoljnostiChanged();
    partial void OnId_SotrudnikaChanging(int value);
    partial void OnId_SotrudnikaChanged();
    partial void OnData_sChanging(System.DateTime value);
    partial void OnData_sChanged();
    partial void OnData_poChanging(System.Nullable<System.DateTime> value);
    partial void OnData_poChanged();
    #endregion
		
		public Sotrudniki_Doljnosti()
		{
			this._Doljnosti = default(EntityRef<Doljnosti>);
			this._Sotrudniki = default(EntityRef<Sotrudniki>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Sotrudniki_Doljnosti", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Sotrudniki_Doljnosti
		{
			get
			{
				return this._Id_Sotrudniki_Doljnosti;
			}
			set
			{
				if ((this._Id_Sotrudniki_Doljnosti != value))
				{
					this.OnId_Sotrudniki_DoljnostiChanging(value);
					this.SendPropertyChanging();
					this._Id_Sotrudniki_Doljnosti = value;
					this.SendPropertyChanged("Id_Sotrudniki_Doljnosti");
					this.OnId_Sotrudniki_DoljnostiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Doljnosti", DbType="Int NOT NULL")]
		public int Id_Doljnosti
		{
			get
			{
				return this._Id_Doljnosti;
			}
			set
			{
				if ((this._Id_Doljnosti != value))
				{
					if (this._Doljnosti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_DoljnostiChanging(value);
					this.SendPropertyChanging();
					this._Id_Doljnosti = value;
					this.SendPropertyChanged("Id_Doljnosti");
					this.OnId_DoljnostiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Sotrudnika", DbType="Int NOT NULL")]
		public int Id_Sotrudnika
		{
			get
			{
				return this._Id_Sotrudnika;
			}
			set
			{
				if ((this._Id_Sotrudnika != value))
				{
					if (this._Sotrudniki.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_SotrudnikaChanging(value);
					this.SendPropertyChanging();
					this._Id_Sotrudnika = value;
					this.SendPropertyChanged("Id_Sotrudnika");
					this.OnId_SotrudnikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_s", DbType="DateTime NOT NULL")]
		public System.DateTime Data_s
		{
			get
			{
				return this._Data_s;
			}
			set
			{
				if ((this._Data_s != value))
				{
					this.OnData_sChanging(value);
					this.SendPropertyChanging();
					this._Data_s = value;
					this.SendPropertyChanged("Data_s");
					this.OnData_sChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_po", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_po
		{
			get
			{
				return this._Data_po;
			}
			set
			{
				if ((this._Data_po != value))
				{
					this.OnData_poChanging(value);
					this.SendPropertyChanging();
					this._Data_po = value;
					this.SendPropertyChanged("Data_po");
					this.OnData_poChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doljnosti_Sotrudniki_Doljnosti", Storage="_Doljnosti", ThisKey="Id_Doljnosti", OtherKey="Id_Doljnosti", IsForeignKey=true)]
		public Doljnosti Doljnosti
		{
			get
			{
				return this._Doljnosti.Entity;
			}
			set
			{
				Doljnosti previousValue = this._Doljnosti.Entity;
				if (((previousValue != value) 
							|| (this._Doljnosti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Doljnosti.Entity = null;
						previousValue.Sotrudniki_Doljnosti.Remove(this);
					}
					this._Doljnosti.Entity = value;
					if ((value != null))
					{
						value.Sotrudniki_Doljnosti.Add(this);
						this._Id_Doljnosti = value.Id_Doljnosti;
					}
					else
					{
						this._Id_Doljnosti = default(int);
					}
					this.SendPropertyChanged("Doljnosti");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sotrudniki_Sotrudniki_Doljnosti", Storage="_Sotrudniki", ThisKey="Id_Sotrudnika", OtherKey="Id_Sotrudnika", IsForeignKey=true)]
		public Sotrudniki Sotrudniki
		{
			get
			{
				return this._Sotrudniki.Entity;
			}
			set
			{
				Sotrudniki previousValue = this._Sotrudniki.Entity;
				if (((previousValue != value) 
							|| (this._Sotrudniki.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sotrudniki.Entity = null;
						previousValue.Sotrudniki_Doljnosti.Remove(this);
					}
					this._Sotrudniki.Entity = value;
					if ((value != null))
					{
						value.Sotrudniki_Doljnosti.Add(this);
						this._Id_Sotrudnika = value.Id_Sotrudnika;
					}
					else
					{
						this._Id_Sotrudnika = default(int);
					}
					this.SendPropertyChanged("Sotrudniki");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ulizi")]
	public partial class Ulizi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Ulizi;
		
		private string _Nazvanie;
		
		private int _Id_Rayona;
		
		private EntitySet<Adresa> _Adresa;
		
		private EntityRef<Rayoni> _Rayoni;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_UliziChanging(int value);
    partial void OnId_UliziChanged();
    partial void OnNazvanieChanging(string value);
    partial void OnNazvanieChanged();
    partial void OnId_RayonaChanging(int value);
    partial void OnId_RayonaChanged();
    #endregion
		
		public Ulizi()
		{
			this._Adresa = new EntitySet<Adresa>(new Action<Adresa>(this.attach_Adresa), new Action<Adresa>(this.detach_Adresa));
			this._Rayoni = default(EntityRef<Rayoni>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Ulizi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Ulizi
		{
			get
			{
				return this._Id_Ulizi;
			}
			set
			{
				if ((this._Id_Ulizi != value))
				{
					this.OnId_UliziChanging(value);
					this.SendPropertyChanging();
					this._Id_Ulizi = value;
					this.SendPropertyChanged("Id_Ulizi");
					this.OnId_UliziChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazvanie", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Nazvanie
		{
			get
			{
				return this._Nazvanie;
			}
			set
			{
				if ((this._Nazvanie != value))
				{
					this.OnNazvanieChanging(value);
					this.SendPropertyChanging();
					this._Nazvanie = value;
					this.SendPropertyChanged("Nazvanie");
					this.OnNazvanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Rayona", DbType="Int NOT NULL")]
		public int Id_Rayona
		{
			get
			{
				return this._Id_Rayona;
			}
			set
			{
				if ((this._Id_Rayona != value))
				{
					if (this._Rayoni.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_RayonaChanging(value);
					this.SendPropertyChanging();
					this._Id_Rayona = value;
					this.SendPropertyChanged("Id_Rayona");
					this.OnId_RayonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ulizi_Adresa", Storage="_Adresa", ThisKey="Id_Ulizi", OtherKey="Id_Ulizi")]
		public EntitySet<Adresa> Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				this._Adresa.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rayoni_Ulizi", Storage="_Rayoni", ThisKey="Id_Rayona", OtherKey="Id_Rayona", IsForeignKey=true)]
		public Rayoni Rayoni
		{
			get
			{
				return this._Rayoni.Entity;
			}
			set
			{
				Rayoni previousValue = this._Rayoni.Entity;
				if (((previousValue != value) 
							|| (this._Rayoni.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rayoni.Entity = null;
						previousValue.Ulizi.Remove(this);
					}
					this._Rayoni.Entity = value;
					if ((value != null))
					{
						value.Ulizi.Add(this);
						this._Id_Rayona = value.Id_Rayona;
					}
					else
					{
						this._Id_Rayona = default(int);
					}
					this.SendPropertyChanged("Rayoni");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Adresa(Adresa entity)
		{
			this.SendPropertyChanging();
			entity.Ulizi = this;
		}
		
		private void detach_Adresa(Adresa entity)
		{
			this.SendPropertyChanging();
			entity.Ulizi = null;
		}
	}
}
#pragma warning restore 1591
